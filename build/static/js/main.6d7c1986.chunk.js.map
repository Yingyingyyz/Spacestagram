{"version":3,"sources":["components/cardItem/Index.js","utlis/index.js","api/index.js","components/datePicker/Index.js","pages/home/Home.js","App.js","index.js"],"names":["CardItem","props","date","explanation","url","title","copyright","likedPhotosArr","JSON","parse","localStorage","getItem","useState","liked","setLiked","showDetail","setShowDetail","anchorEl","setAnchorEl","open","Boolean","id","undefined","copyImageUrl","navigator","clipboard","writeText","document","dispatchEvent","Event","Card","className","style","background","CardMedia","component","image","CardContent","Typography","variant","Collapse","in","timeout","unmountOnExit","CardActions","disableSpacing","IconButton","onClick","obj","setItem","stringify","e","console","error","Error","color","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","API_KEY","formartDate","toISOString","substring","getDataAction","start_date","end_date","a","fetch","res","status","json","filter","item","media_type","reverse","DatePickers","startDate","onStartDateChange","endDate","onEndDateChange","utils","DateFnsUtils","Grid","display","justifyContent","alignItems","flexDirection","margin","label","format","value","disableFuture","onChange","KeyboardButtonProps","shouldDisableDate","Home","data","setData","Date","valueOf","setStartDate","setEndDate","loading","setLoading","displayMsg","setDisplayMsg","getData","useEffect","callback","setTimeout","addEventListener","removeEventListener","Alert","elevation","HideOnScroll","children","window","trigger","useScrollTrigger","target","Slide","appear","direction","AppBar","Container","Snackbar","severity","spacing","container","map","imageContent","index","Fragment","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6d7c1986.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, CardMedia, CardContent, Typography, CardActions, IconButton, Collapse, Popover } from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\n\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport './Index.scss'\r\n\r\nconst CardItem = (props) => {\r\n    const { date, explanation, url, title, copyright } = props\r\n    const likedPhotosArr = JSON.parse(localStorage.getItem('likedPhotosLibrary'));\r\n    const [liked, setLiked] = useState(likedPhotosArr?.[title] ?? false);\r\n\r\n    //isShow explanation variable and set function \r\n    const [showDetail, setShowDetail] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    //click share icon，popup popover\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    //popover over Close event\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    //click ins || facebook || Twitter ,share link.\r\n    const copyImageUrl = () => {\r\n        navigator.clipboard.writeText(url)\r\n        document.dispatchEvent(new Event('successCopy'))\r\n    }\r\n\r\n    //点击往喜欢列表添加或者移除\r\n    const handleClickLikeIcon = () => {\r\n        try {\r\n            //set ui action view\r\n            setLiked(!liked);\r\n\r\n            //get new likedPhotosArr as obj\r\n            const obj = JSON.parse(localStorage.getItem('likedPhotosLibrary')) ?? {};\r\n\r\n            //set localStorage  likedPhotosLibrary json \r\n            obj[title] = !liked;\r\n            localStorage.setItem('likedPhotosLibrary', JSON.stringify(obj));\r\n        } catch (e) {\r\n            //if catch  error , console error\r\n            console.error(new Error(\"Failed to save  photo likes.\"));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className=\"cardContent\" style={{ background: '#293858' }}>\r\n\r\n            {/*cardHeader picture start*/}\r\n            <CardMedia\r\n                className=\"imgElem\"\r\n                component=\"img\"\r\n                image={url}\r\n                title={title}\r\n            />\r\n            {/*cardHeader picture end*/}\r\n\r\n\r\n            {/* {text content start } */}\r\n            {!showDetail && <CardContent className=\"btnsContent\">\r\n                <Typography component=\"h3\" className=\"title\">\r\n                    {copyright}\r\n                    {copyright && ' - '}\r\n                    {title}\r\n                </Typography>\r\n                <Typography className=\"date\" >\r\n                    {date}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\" className=\"explanation\" >\r\n                    {explanation}\r\n                </Typography>\r\n            </CardContent>}\r\n            <Collapse in={showDetail} timeout=\"auto\" unmountOnExit>\r\n                <CardContent className=\"btnsContent\">\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                        {explanation}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Collapse>\r\n            {/* text content end  */}\r\n\r\n            <CardActions disableSpacing className=\"btnsContent\">\r\n                <IconButton aria-label=\"liked\" onClick={handleClickLikeIcon}>\r\n                    <FavoriteIcon style={{ color: liked ? 'red' : 'white' }} />\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\" style={{ color: '#fff' }} aria-describedby={id} variant=\"contained\" onClick={handleClick}>\r\n                    <ShareIcon />\r\n                </IconButton>\r\n                <Popover\r\n                    id={id}\r\n                    open={open}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'center',\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <IconButton aria-label=\"facebook\" onClick={copyImageUrl}>\r\n                            <FacebookIcon />\r\n                        </IconButton>\r\n\r\n                        <IconButton aria-label=\"twitter\" onClick={copyImageUrl}>\r\n                            <TwitterIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"instagram\" onClick={copyImageUrl}>\r\n                            <InstagramIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </Popover>\r\n\r\n                <IconButton\r\n                    className=\"showDetail\"\r\n                    onClick={() => setShowDetail(!showDetail)}\r\n                    aria-expanded={showDetail}\r\n                    style={{ color: '#fff' }}\r\n                >\r\n                    {\r\n                        showDetail ? < KeyboardArrowUpIcon /> : <ExpandMoreIcon />\r\n                    }\r\n\r\n                </IconButton>\r\n            </CardActions>\r\n        </Card >\r\n    );\r\n}\r\nexport default CardItem;","//1.The default image resource list takes data from the last 30 days of the day\r\nexport const monthTimestamp = 2592000000\r\n\r\n\r\n//api_key\r\nexport const API_KEY = '4jThRkUQuUnHrygjtR6hjekFuGKjmHjebmSX1HA8';\r\n\r\n\r\n//Time and date format reset yyyy-MM-dd\r\nexport const formartDate = (date) => {\r\n  try {\r\n    return date.toISOString().substring(0, 10);\r\n  } catch (e) {\r\n    console.error(new Error('Invalid time !'))\r\n  }\r\n}","\r\nimport { API_KEY, formartDate } from \"../utlis\";\r\n\r\nexport async function getDataAction(start_date, end_date) {\r\n    const res = await fetch(`https://api.nasa.gov/planetary/apod?api_key=${API_KEY}&start_date=${formartDate(start_date)}&end_date=${formartDate(end_date)}`);\r\n\r\n    if (res?.status === 200) {\r\n        return ((await res.json()).filter(item => item?.media_type === \"image\").reverse());\r\n    }\r\n    return [];\r\n}\r\n","import \"date-fns\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst DatePickers = ({\r\n    //Deconstructing the parameters passed in by Home.js\r\n    startDate,\r\n    onStartDateChange,\r\n    endDate,\r\n    onEndDateChange,\r\n}) => {\r\n    const IsValidEndDate = (date) => {\r\n        return date <= startDate;\r\n    };\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}  >\r\n            <Grid style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', flexDirection: 'row' }}>\r\n                <KeyboardDatePicker\r\n                    style={{ color: '#fff' }}\r\n                    margin=\"normal\"\r\n                    id=\"start-date-picker\"\r\n                    label=\"Start Date \"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={startDate}\r\n                    disableFuture=\"true\"\r\n                    onChange={onStartDateChange}\r\n                    KeyboardButtonProps={{\r\n                        \"aria-label\": \"change start date\",\r\n                    }}\r\n                />\r\n\r\n                <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"end-date-picker\"\r\n                    label=\"End Date \"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={endDate}\r\n                    onChange={onEndDateChange}\r\n                    disableFuture=\"true\"\r\n                    shouldDisableDate={IsValidEndDate}\r\n                    KeyboardButtonProps={{\r\n                        \"aria-label\": \"change end date\",\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n};\r\nexport default DatePickers","import React, { useEffect, useState } from 'react';\r\nimport { Container, Grid, useScrollTrigger, Slide, AppBar, Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CardItem from '../../components/cardItem/Index';\r\nimport { getDataAction } from '../../api';\r\nimport DatePickers from '../../components/datePicker/Index'\r\nimport { monthTimestamp } from '../../utlis';\r\nimport './Index.scss'\r\n\r\nfunction Home(props) {\r\n    const [data, setData] = useState([]);\r\n    const [startDate, setStartDate] = useState(new Date(new Date().valueOf() - monthTimestamp));\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [loading, setLoading] = useState(true);\r\n    const [displayMsg, setDisplayMsg] = useState(false);\r\n\r\n    const getData = async (startDate, endDate) => {\r\n        setLoading(true);\r\n        const res = await getDataAction(startDate, endDate);\r\n        setData([...res]);\r\n        setLoading(false);\r\n    }\r\n    const handleSetStartDate = (date) => {\r\n        setStartDate(date)\r\n    }\r\n    const handleSetEndDate = (date) => {\r\n        setEndDate(date)\r\n\r\n    }\r\n    //1.Get a list of image detail resources\r\n    //2.Only triggered when the start and end dates are changed or when you first enter the page.\r\n    useEffect(() => {\r\n        getData(startDate, endDate);\r\n    }, [startDate, endDate]);\r\n\r\n    //Add a listener event to listen to the custom share image link event\r\n    useEffect(() => {\r\n        const callback = function () {\r\n            setDisplayMsg(true);\r\n            setTimeout(() => setDisplayMsg(false), 3000)\r\n        }\r\n        document.addEventListener('successCopy', callback);\r\n        return () => {\r\n            document.removeEventListener('successCopy', callback)\r\n        }\r\n    }, [])\r\n\r\n    //A pop-up prompt with a successful image sharing link\r\n    const Alert = (props) => {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n    //Hide or show the appbar when the scrollbar is scrolling\r\n    const HideOnScroll = (props) => {\r\n        const { children, window } = props;\r\n        const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n        return (\r\n            <Slide appear={false} direction=\"down\" in={!trigger}>\r\n                {children}\r\n            </Slide>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"home\">\r\n            <HideOnScroll {...props}>\r\n                <AppBar className=\"appBar\" >\r\n                    <div >\r\n                        <h2>Spacestagram</h2>\r\n                        <span >\r\n                        Brought to you by NASA's Astronomy Photo of the Day (APOD) API\r\n                        </span>\r\n                    </div>\r\n                    <DatePickers\r\n                        startDate={startDate}\r\n                        endDate={endDate}\r\n                        onEndDateChange={handleSetEndDate}\r\n                        onStartDateChange={handleSetStartDate}\r\n                    />\r\n                </AppBar>\r\n            </HideOnScroll>\r\n            <Container className=\"container\">\r\n\r\n                <Snackbar open={displayMsg}>\r\n                    <Alert severity=\"success\">\r\n                        Image URL successfully copied to clipboard!\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Grid\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    spacing={4}\r\n                    container\r\n                >\r\n                    {\r\n                        data.map((imageContent, index) => {\r\n                            return (\r\n                                <React.Fragment key={index}>\r\n                                    <Grid item>\r\n                                        <CardItem {...imageContent} />\r\n                                    </Grid>\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n                <div className=\"loading\">\r\n                    {\r\n                        loading && (\r\n                            <h1  >Loading...</h1>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import Home from './pages/home/Home'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}